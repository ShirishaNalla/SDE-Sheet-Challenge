  #include<bits/stdc++.h>
  void func(int ind,vector<int>& candidates, vector<int>&ds, int target,
        vector<vector<int>>&ans)
    {
        if(ind==candidates.size()) 
        
        { if(target==0)
            ans.push_back(ds);
            return;
        }
            
      if(candidates[ind]<=target)
      {    ds.push_back(candidates[ind]);
          func(ind+1 ,candidates,ds,target-candidates[ind], ans);
            ds.pop_back();
       
      } 
        while(ind<candidates.size()-1 and candidates[ind]==candidates[ind+1])
            ind++;
        func(ind +1,candidates,ds,target, ans);

}
    vector<vector<int>> combinationSum2(vector<int>& candidates, int n,int target) {
        
        vector<vector<int>>ans;
        vector<int>ds;
         sort(candidates.begin(),candidates.end());
        func(0,candidates,ds,target,ans);
        return ans;
        
    }
